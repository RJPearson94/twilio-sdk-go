// This is an autogenerated file. DO NOT MODIFY
package task_queue

import (
	"context"
	"net/http"
	"time"

	"github.com/RJPearson94/twilio-sdk-go/client"
)

type UpdateTaskQueueInput struct {
	FriendlyName           string `form:"FriendlyName,omitempty"`
	AssignmentActivitySid  string `form:"AssignmentActivitySid,omitempty"`
	MaxReservedWorkers     int    `form:"MaxReservedWorkers,omitempty"`
	TargetWorkers          string `form:"TargetWorkers,omitempty"`
	TaskOrder              string `form:"TaskOrder,omitempty"`
	ReservationActivitySid string `form:"ReservationActivitySid,omitempty"`
}

type UpdateTaskQueueOutput struct {
	Sid                     string     `json:"sid"`
	AccountSid              string     `json:"account_sid"`
	WorkspaceSid            string     `json:"workspace_sid"`
	FriendlyName            string     `json:"friendly_name"`
	EventCallbackURL        *string    `json:"event_callback_url,omitempty"`
	AssignmentActivityName  string     `json:"assignment_activity_name"`
	AssignmentActivitySid   string     `json:"assignment_activity_sid"`
	ReservationActivityName string     `json:"reservation_activity_name"`
	ReservationActivitySid  string     `json:"reservation_activity_sid"`
	TargetWorkers           string     `json:"target_workers"`
	TaskOrder               string     `json:"task_order"`
	MaxReservedWorkers      int        `json:"max_reserved_workers"`
	DateCreated             time.Time  `json:"date_created"`
	DateUpdated             *time.Time `json:"date_updated,omitempty"`
	URL                     string     `json:"url"`
}

func (c Client) Update(input *UpdateTaskQueueInput) (*UpdateTaskQueueOutput, error) {
	return c.UpdateWithContext(context.Background(), input)
}

func (c Client) UpdateWithContext(context context.Context, input *UpdateTaskQueueInput) (*UpdateTaskQueueOutput, error) {
	op := client.Operation{
		HTTPMethod:  http.MethodPost,
		HTTPPath:    "/Workspaces/{workspaceSid}/TaskQueues/{sid}",
		ContentType: client.URLEncoded,
		PathParams: map[string]string{
			"workspaceSid": c.workspaceSid,
			"sid":          c.sid,
		},
	}

	output := &UpdateTaskQueueOutput{}
	if err := c.client.Send(context, op, input, output); err != nil {
		return nil, err
	}
	return output, nil
}
