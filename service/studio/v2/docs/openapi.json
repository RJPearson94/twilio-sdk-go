{
  "openapi": "3.0.1",
  "info": {
    "title": "Twilio Studio API",
    "description": "API doc for Twilio Studio V2 API",
    "version": "v0.0.1",
    "x-sdk-generator": {
      "beta": true,
      "subDomain": "studio",
      "version": "v2"
    }
  },
  "servers": [
    {
      "url": "https://studio.twilio.com/v2",
      "description": "Live Endpoint"
    }
  ],
  "tags": [
    {
      "name": "Flow",
      "description": "Twilio Flow Resources"
    },
    {
      "name": "Flow Revision",
      "description": "Twilio Flow Revision Resources"
    },
    {
      "name": "Flow Test User",
      "description": "Twilio Flow Test User Resources"
    },
    {
      "name": "Flow Validate",
      "description": "Twilio Flow Validate Resources"
    }
  ],
  "paths": {
    "/Flows": {
      "get": {
        "summary": "Retrieve Multiple Flows",
        "x-sdk-generator": {
          "function-name": "GetPage"
        },
        "tags": ["Flow"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PageSize",
            "description": "The number of results per page (Default is 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "in": "query",
            "name": "Page",
            "description": "The page of results (Default is 0)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMultipleFlowsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      },
      "post": {
        "summary": "Create New Studio Flow",
        "x-sdk-generator": {
          "function-name": "Create"
        },
        "tags": ["Flow"],
        "security": [
          {
            "auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/createFlowRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created Flow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createFlowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload supplied"
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    },
    "/Flows/{sid}": {
      "get": {
        "summary": "Retrieve Studio Flow",
        "x-sdk-generator": {
          "function-name": "Get"
        },
        "tags": ["Flow"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Flow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFlowResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      },
      "post": {
        "summary": "Update a Studio Flow",
        "x-sdk-generator": {
          "function-name": "Update"
        },
        "tags": ["Flow"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/updateFlowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved Flow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateFlowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload supplied"
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      },
      "delete": {
        "summary": "Delete a Studio Flow",
        "x-sdk-generator": {
          "function-name": "Delete"
        },
        "tags": ["Flow"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted Flow"
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    },
    "/Flows/{sid}/Revisions": {
      "get": {
        "summary": "Retrieve Multiple Flow Revisions",
        "x-sdk-generator": {
          "function-name": "GetPage"
        },
        "tags": ["Flow Revision"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flow revisions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMultipleFlowRevisionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    },
    "/Flows/{sid}/Revisions/{revisionNumber}": {
      "get": {
        "summary": "Retrieve Flow Revision",
        "x-sdk-generator": {
          "function-name": "Get"
        },
        "tags": ["Flow Revision"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "revisionNumber",
            "description": "Flow Revision Number",
            "schema": {
              "type": "number",
              "minimum": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flow revisions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFlowRevisionResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow or Flow Revision was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    },
    "/Flows/{sid}/TestUsers": {
      "get": {
        "summary": "Retrieve Flow Test Users",
        "x-sdk-generator": {
          "function-name": "GetPage"
        },
        "tags": ["Flow Test User"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flow test users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFlowTestUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      },
      "post": {
        "summary": "Update Flow Test Users",
        "x-sdk-generator": {
          "function-name": "Update"
        },
        "tags": ["Flow Test User"],
        "security": [
          {
            "auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sid",
            "description": "SID of Flow Resource",
            "schema": {
              "type": "string",
              "format": "^FW(.+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated flow test users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateFlowTestUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "404": {
            "description": "The Flow was not found"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    },
    "/Flows/Validate": {
      "post": {
        "summary": "Validate Flow",
        "x-sdk-generator": {
          "function-name": "Validate"
        },
        "tags": ["Flow Validate"],
        "security": [
          {
            "auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/validateFlowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully validated the flow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validateFlowResponse"
                }
              }
            }
          },
          "401": {
            "description": "The auth credentials supplied are not allowed to access the resource"
          },
          "429": {
            "description": "The rate limit has been reached"
          },
          "500": {
            "description": "The service has had an internal error"
          },
          "503": {
            "description": "The service is currently unavailable"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "auth": {
        "description": "Basic Auth of Twilio Account SID as the username and Auth Token as the password. Alternatively you can use the API Key SID as the username and the API Key Secret as the password",
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "createFlowRequest": {
        "description": "The request payload for creating a new Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/baseFlowRequest"
          }
        ]
      },
      "createFlowResponse": {
        "description": "The response payload for creating a new Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/flowResponse"
          }
        ]
      },
      "getMultipleFlowsResponse": {
        "description": "The response payload for retrieving many Studio Flows",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/metaResponse"
          },
          "flows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flowResponse"
            }
          }
        }
      },
      "getFlowResponse": {
        "description": "The response payload for retrieving a Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/flowResponse"
          }
        ]
      },
      "updateFlowRequest": {
        "description": "The update payload for creating a existing Studio Flow",
        "type": "object",
        "required": ["Status"],
        "properties": {
          "FriendlyName": {
            "description": "The name associated with the flow",
            "type": "string"
          },
          "Status": {
            "description": "The flow status",
            "type": "string",
            "enum": ["draft", "published"]
          },
          "Definition": {
            "description": "The flow definition JSON",
            "type": "object"
          },
          "CommitMessage": {
            "description": "Description of the changes made",
            "type": "string"
          }
        }
      },
      "updateFlowResponse": {
        "description": "The response payload for updating a Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/flowResponse"
          }
        ]
      },
      "getMultipleFlowRevisionsResponse": {
        "description": "The response payload for retrieving many Revisions of a Studio Flow",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/metaResponse"
          },
          "revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/baseFlowResponse"
            }
          }
        }
      },
      "getFlowRevisionResponse": {
        "description": "The response payload for retrieving a Revision of a Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/baseFlowResponse"
          }
        ]
      },
      "getFlowTestUserResponse": {
        "description": "The response payload for retrieving a flow test users",
        "allOf": [
          {
            "$ref": "#/components/schemas/baseTestUserResponse"
          }
        ]
      },
      "updateFlowTestUserResponse": {
        "description": "The response payload for updating a flow test users",
        "allOf": [
          {
            "$ref": "#/components/schemas/baseTestUserResponse"
          }
        ]
      },
      "validateFlowRequest": {
        "description": "The request payload for validating a Studio Flow",
        "allOf": [
          {
            "$ref": "#/components/schemas/baseFlowRequest"
          }
        ]
      },
      "validateFlowResponse": {
        "description": "The response payload for validating a Studio Flow",
        "properties": {
          "valid": {
            "description": "Flag to determine is the Flow is valid",
            "type": "boolean"
          }
        }
      },
      "baseFlowRequest": {
        "type": "object",
        "required": ["FriendlyName", "Status", "Definition"],
        "properties": {
          "FriendlyName": {
            "description": "The name associated with the flow",
            "type": "string"
          },
          "Status": {
            "description": "The flow status",
            "type": "string",
            "enum": ["draft", "published"]
          },
          "Definition": {
            "description": "The flow definition JSON",
            "type": "object"
          },
          "CommitMessage": {
            "description": "Description of the changes made",
            "type": "string"
          }
        }
      },
      "flowResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/baseFlowResponse"
          },
          {
            "type": "object",
            "properties": {
              "links": {
                "description": "The URLs of the Flow resources",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          }
        ]
      },
      "baseFlowResponse": {
        "type": "object",
        "properties": {
          "sid": {
            "description": "Twilio identifier of the flow",
            "format": "^FW(.+)$"
          },
          "account_sid": {
            "description": "Twilio identifier of the account",
            "format": "^AC(.+)$"
          },
          "friendly_name": {
            "description": "The name associated with the flow",
            "type": "string"
          },
          "definition": {
            "description": "The flow definition JSON",
            "type": "object"
          },
          "status": {
            "description": "The flow status",
            "type": "string",
            "enum": ["draft", "published"]
          },
          "revision": {
            "description": "The number of the latest revision",
            "type": "integer"
          },
          "commit_message": {
            "description": "Description of the changes made",
            "type": "string"
          },
          "valid": {
            "description": "Is the definition valid",
            "type": "boolean"
          },
          "errors": {
            "description": "List of flow definition errors",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "warnings": {
            "description": "List of flow definition warnings",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "date_created": {
            "description": "The Date & Time the resource was created in ISO8601 format",
            "type": "string",
            "format": "date_time"
          },
          "date_updated": {
            "description": "The Date & Time the resource was last updated in ISO8601 format",
            "type": "string",
            "format": "date_time"
          },
          "webhook_url": {
            "description": "The webhook URL of the Flow",
            "type": "string",
            "format": "url"
          },
          "url": {
            "description": "The URL of the Flow",
            "type": "string",
            "format": "url"
          }
        }
      },
      "baseTestUserResponse": {
        "type": "object",
        "properties": {
          "sid": {
            "description": "Twilio identifier of the flow",
            "format": "^FW(.+)$"
          },
          "test_users": {
            "description": "Test Users assigned to the flow",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "description": "The URL of the Flow Test Users",
            "type": "string",
            "format": "url"
          }
        }
      },
      "metaResponse": {
        "type": "object",
        "properties": {
          "previous_page_url": {
            "description": "The URL for the previous page of Studio Flows",
            "type": "string",
            "format": "url"
          },
          "next_page_url": {
            "description": "The URL for the next page of Studio Flows",
            "type": "string",
            "format": "url"
          },
          "url": {
            "description": "The URL for the current page of Studio Flows",
            "type": "string",
            "format": "url"
          },
          "page": {
            "description": "The current page number",
            "type": "integer"
          },
          "first_page_url": {
            "description": "The URL for the first page of Studio Flows",
            "type": "string",
            "format": "url"
          },
          "page_size": {
            "description": "The page size",
            "type": "integer"
          },
          "key": {
            "description": "The page key",
            "type": "string"
          }
        }
      }
    }
  }
}
