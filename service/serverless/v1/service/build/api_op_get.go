// This is an autogenerated file. DO NOT MODIFY
package build

import (
	"context"
	"net/http"
	"time"

	"github.com/RJPearson94/twilio-sdk-go/client"
)

type FunctionVersion struct {
	Sid         string    `json:"sid"`
	AccountSid  string    `json:"account_sid"`
	ServiceSid  string    `json:"service_sid"`
	FunctionSid string    `json:"function_sid"`
	DateCreated time.Time `json:"date_created"`
	Path        string    `json:"path"`
	Visibility  string    `json:"visibility"`
}

type AssetVersion struct {
	Sid         string    `json:"sid"`
	AccountSid  string    `json:"account_sid"`
	ServiceSid  string    `json:"service_sid"`
	AssetSid    string    `json:"asset_sid"`
	DateCreated time.Time `json:"date_created"`
	Path        string    `json:"path"`
	Visibility  string    `json:"visibility"`
}

type Dependency struct {
	Name    string `json:"name"`
	Version string `json:"version"`
}

type GetBuildOutput struct {
	Sid              string             `json:"sid"`
	AccountSid       string             `json:"account_sid"`
	ServiceSid       string             `json:"service_sid"`
	AssetVersions    *[]AssetVersion    `json:"asset_versions,omitempty"`
	FunctionVersions *[]FunctionVersion `json:"function_versions,omitempty"`
	Dependencies     *[]Dependency      `json:"dependencies,omitempty"`
	Status           string             `json:"status"`
	DateCreated      time.Time          `json:"date_created"`
	DateUpdated      *time.Time         `json:"date_updated,omitempty"`
	URL              string             `json:"url"`
}

func (c Client) Get() (*GetBuildOutput, error) {
	return c.GetWithContext(context.Background())
}

func (c Client) GetWithContext(context context.Context) (*GetBuildOutput, error) {
	op := client.Operation{
		HTTPMethod: http.MethodGet,
		HTTPPath:   "/Services/{serviceSid}/Builds/{sid}",
		PathParams: map[string]string{
			"serviceSid": c.serviceSid,
			"sid":        c.sid,
		},
	}

	output := &GetBuildOutput{}
	if err := c.client.Send(context, op, nil, output); err != nil {
		return nil, err
	}
	return output, nil
}
